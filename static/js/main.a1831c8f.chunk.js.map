{"version":3,"sources":["UI/components/common/Input/SuperInputText.tsx","UI/components/common/Checkbox/SuperCheckbox.tsx","UI/components/common/Button/SuperButton.tsx","DAL/api.ts","BLL/login-reducer.ts","UI/components/pages/Login/Login.tsx","DAL/sign_up-api.ts","BLL/app-reducer.ts","BLL/sign-up-reducer.ts","UI/components/pages/SignUp/SignUp.tsx","UI/components/pages/Profile/Profile.tsx","UI/components/pages/PasswordRecovery/PasswordRecovery.tsx","UI/components/pages/NewPassword/NewPassword.tsx","UI/components/pages/Test/Test.tsx","UI/components/pages/Error404/Error404.tsx","UI/routes/Routes.tsx","UI/components/Navbar.tsx","App.tsx","reportWebVitals.ts","BLL/new-password-reducer.ts","BLL/password-recovery-reducer.ts","BLL/profile-reducer.ts","BLL/store.ts","index.tsx","UI/components/pages/SignUp/SignUp.module.css","UI/components/common/Input/SuperInputText.module.css","UI/components/common/Checkbox/SuperCheckbox.module.css","UI/components/common/Button/SuperButton.module.css","UI/components/Navbar.module.css"],"names":["SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","withCredentials","authAPI","email","password","rememberMe","post","delete","initialState","isLogin","name","loading","Login","dispatch","useDispatch","useSelector","state","login","errorMessage","useState","confirmPassword","showPassword","showConfirmPassword","disabled","setValue","handleInputChange","props","target","to","PATH","PROFILE","style","color","placeholder","PASSWORD_RECOVERY","onClick","then","response","catch","data","message","setError","REGISTRATION","signUpAPI","status","logged","setAppStatusAC","setIsLoggedInAC","SignUp","signUp","app","isLogged","React","amount","weight","weightRange","confirm","values","setValues","handleChange","prop","event","Box","sx","position","width","height","display","alignItems","justifyContent","CircularProgress","register","description","FormControl","m","variant","InputLabel","htmlFor","Input","id","endAdornment","InputAdornment","IconButton","aria-label","onMouseDown","preventDefault","onBlur","buttons","Button","size","res","console","log","setSignUpError","Profile","src","alt","LOGIN","PasswordRecovery","NewPassword","Test","Error404","NEW_PASSWORD","TEST_PAGE","Routes","path","exact","render","Navbar","navbar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","newPassword","passwordRecovery","title","rootReducer","combineReducers","action","profile","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a1831c8f.chunk.js","sourcesContent":["import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: (e: KeyboardEvent<HTMLInputElement>) => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter(e) // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.errorInput} ${className ? className : ''}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import axios,{AxiosResponse} from \"axios\";\r\n\r\n\r\nconst instance= axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    withCredentials: true,\r\n})\r\n\r\n\r\nexport type LoginParamsType={\r\n    _id: string;\r\n    email: string;\r\n    name: string;\r\n    avatar?: string;\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\r\n    rememberMe: boolean;\r\n    error?: string;\r\n}\r\n\r\n\r\n\r\nexport const authAPI={\r\n    login(email:string,password:string,rememberMe:boolean){\r\n        return instance\r\n            .post<{email:string, password:string, rememberMe:boolean},AxiosResponse<LoginParamsType>>\r\n            ('auth/login', {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instance.delete('auth/me')\r\n    }\r\n}","import {authAPI, LoginParamsType} from \"../DAL/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AxiosError} from \"axios\";\r\n\r\ntype ActionsType =\r\n    ReturnType<typeof loading> |\r\n    ReturnType<typeof setError>|\r\n    ReturnType<typeof setProfileData>\r\n\r\n\r\nconst initialState = {\r\n    isLogin: false,\r\n    error: null,\r\n    name:null\r\n}\r\n\r\ntype InitialStateType = {\r\n    isLogin: boolean\r\n    error: string |null\r\n    name: string |null\r\n}\r\n\r\nexport const LoginReducer = (state: InitialStateType = initialState, action: ActionsType) => {\r\n    switch (action.type) {\r\n        case 'SET-LOGIN': {\r\n            return {...state, isLogin: action.value}\r\n        }\r\n        case \"SET-ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        case \"SET-PROFILE\":{\r\n            return {...state,name:action.name}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const loading = (value: boolean) => (\r\n    {type: 'SET-LOGIN', value} as const)\r\nexport const setError = (error: string) => (\r\n    {type: 'SET-ERROR', error} as const)\r\nexport const setProfileData = (name: string) => (\r\n    {type: \"SET-PROFILE\", name} as const\r\n)\r\n\r\n\r\nexport const loginTC = (email: string, password: string, rememberMe: boolean) => (dispatch: Dispatch<ActionsType>) => {\r\n    authAPI.login(email, password, rememberMe)\r\n        .then(response =>\r\n            dispatch(loading(true)\r\n            ))\r\n        .catch(e => {\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            dispatch(setError(error))\r\n        })\r\n}\r\n\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch<ActionsType>) => {\r\n    authAPI.logout().then(res =>\r\n        dispatch(loading(false))\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {PATH} from \"../../../routes/Routes\";\r\nimport SuperInputText from \"../../common/Input/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/Checkbox/SuperCheckbox\";\r\nimport SuperButton from \"../../common/Button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../../BLL/store\";\r\nimport {loginTC} from \"../../../../BLL/login-reducer\";\r\n\r\n\r\nexport const Login = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLogin = useSelector<AppRootStateType>(state => state.login.isLogin)\r\n    const errorMessage= useSelector<AppRootStateType>(state => state.login.error)\r\n\r\n    interface State {\r\n        password: string;\r\n        confirmPassword: string;\r\n        email: string;\r\n        showPassword: boolean;\r\n        showConfirmPassword: boolean;\r\n        disabled: boolean;\r\n        rememberMe: boolean;\r\n    }\r\n    const [value,setValue] =useState<State>({\r\n        password: '',\r\n        confirmPassword: '',\r\n        email: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n        disabled: false,\r\n        rememberMe: true,\r\n    })\r\n\r\n    const handleInputChange =(props: keyof State)=>(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n        setValue({...value,[props]:e.target.value})\r\n    }\r\n\r\n    const handleCheckBoxChange =(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n            setValue(value=>({...value,rememberMe:e.target.checked }))\r\n    }\r\n\r\n    const sendData=()=>{\r\n        dispatch(loginTC(value.email,value.password,value.rememberMe))\r\n    }\r\n\r\n\r\n    if (isLogin){\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {errorMessage && <div style={{color:'red'}}>`{errorMessage}`</div>}\r\n            <div>\r\n                <SuperInputText\r\n                    type=\"text\"\r\n                    placeholder=\"Login\"\r\n                    value={value.email}\r\n                    onChange={handleInputChange('email')}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperInputText\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={value.password}\r\n                    onChange={handleInputChange(\"password\")}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperCheckbox\r\n                    checked={value.rememberMe}\r\n                    children={\"remember me\"}\r\n                    onChange={handleCheckBoxChange}\r\n                />\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.PASSWORD_RECOVERY}>Forgot</NavLink>\r\n            </div>\r\n            <SuperButton\r\n                children={\"Login\"}\r\n                onClick={sendData}\r\n            />\r\n            <div>\r\n                <NavLink to={PATH.REGISTRATION}>Sign Up</NavLink>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import axios, {AxiosResponse} from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/',\r\n    withCredentials: true,\r\n    // headers: {\r\n    //     'API-KEY': '5270c5b3-d507-4271-8572-1aea12195316'\r\n    // }\r\n})\r\n\r\nexport const signUpAPI = {\r\n    createUser(email: string, password:string) {\r\n        return instance.post<{ email: string,password:string }, AxiosResponse< SuccessResponseType >>('auth/register', {email,password});\r\n    },\r\n}\r\n\r\nexport type SuccessResponseType = {\r\n    addedUser: {\r\n        _id: string,\r\n        email: string,\r\n        rememberMe: boolean,\r\n        isAdmin: boolean,\r\n        name: string,\r\n        verified: boolean,\r\n        publicCardPacksCount: number,\r\n        created: string,\r\n        updated: string,\r\n        __v: number\r\n    }\r\n}\r\n// export type ErrorResponseType ={\r\n//     error: string,\r\n//     email: string,\r\n//     in: string\r\n// }","\r\nconst initialState: InitialStateType = {\r\n    status: 'idle',\r\n    error: null,\r\n    logged: false\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        case 'APP/SET-LOGGED':\r\n            return {...state, logged:action.logged}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\nexport type InitialStateType = {\r\n    // происходит ли сейчас взаимодействие с сервером\r\n    status: RequestStatusType\r\n    // если ошибка какая-то глобальная произойдёт - мы запишем текст ошибки сюда\r\n    error: string | null\r\n    logged: boolean\r\n}\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setIsLoggedInAC = (logged: boolean) => ({type:'APP/SET-LOGGED', logged} as const)\r\n\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type setIsLoggedInActionType = ReturnType<typeof setIsLoggedInAC>\r\n\r\ntype ActionsType =\r\n    | SetAppErrorActionType\r\n    | SetAppStatusActionType\r\n    | setIsLoggedInActionType","import {Dispatch} from \"redux\";\r\nimport {signUpAPI} from \"../DAL/sign_up-api\";\r\nimport {setAppStatusAC, setIsLoggedInAC} from \"./app-reducer\";\r\n\r\nconst initialState:InitialStateType = {\r\n    error: null\r\n}\r\nexport const SignUpReducer = (state:InitialStateType = initialState, action:ActionsType):InitialStateType=>{\r\n    switch (action.type){\r\n        case 'SIGNUP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport type InitialStateType = {\r\n    error: string|null\r\n}\r\n\r\n//action creators\r\nexport const setSignUpError = (error: string | null) =>({type: 'SIGNUP/SET-ERROR', error} as const)\r\n\r\n//types action creators\r\nexport type setSignUpErrorActionType = ReturnType<typeof setSignUpError>\r\n\r\n\r\ntype ActionsType = setSignUpErrorActionType\r\n\r\n//thunk creators\r\nexport const signUpTC = (email: string, password:string) => (dispatch:Dispatch) =>{\r\n    dispatch(setAppStatusAC('loading'))\r\n    signUpAPI.createUser(email, password)\r\n        .then(res =>{\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n            dispatch(setIsLoggedInAC(true))\r\n\r\n        })\r\n        .catch(error=>{\r\n            console.log({...error})\r\n            dispatch(setSignUpError(error.response.data.error))\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}","import React from 'react';\r\nimport style from './SignUp.module.css'\r\nimport Input from \"@mui/material/Input\";\r\nimport FormControl from '@mui/material/FormControl/FormControl';\r\nimport InputLabel from '@mui/material/InputLabel/InputLabel';\r\nimport {Box, Button, FilledInput, IconButton, InputAdornment} from \"@mui/material\";\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppRootStateType} from \"../../../../BLL/store\";\r\nimport {PATH} from \"../../../routes/Routes\";\r\nimport {signUpTC} from \"../../../../BLL/sign-up-reducer\";\r\nimport {RequestStatusType} from \"../../../../BLL/app-reducer\";\r\n\r\nexport const SignUp = () => {\r\n    const error = useSelector<AppRootStateType, string | null>(state => state.signUp.error);\r\n    const loading = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status);\r\n    const isLogged = useSelector<AppRootStateType, boolean>(state => state.app.logged)\r\n    const dispatch = useDispatch()\r\n\r\n    interface State {\r\n        amount: string;\r\n        password: string;\r\n        confirmPassword: string;\r\n        email: string;\r\n        weight: string;\r\n        weightRange: string;\r\n        showPassword: boolean;\r\n        showConfirmPassword: boolean;\r\n        disabled: boolean;\r\n        confirm: boolean;\r\n    }\r\n\r\n    const [values, setValues] = React.useState<State>({\r\n        amount: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        email: '',\r\n        weight: '',\r\n        weightRange: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n        disabled: false,\r\n        confirm: true\r\n    });\r\n    const handleChange = (prop: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValues({...values, [prop]: event.target.value});\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setValues({\r\n            ...values,\r\n            showPassword: !values.showPassword,\r\n        });\r\n    };\r\n    const handleClickShowConfirmPassword = () => {\r\n        setValues({\r\n            ...values,\r\n            showConfirmPassword: !values.showConfirmPassword,\r\n        });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleMouseDownConfirmPassword = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    const sendData = () => {\r\n        dispatch(signUpTC(values.email, values.password))\r\n    }\r\n    const resetData = () =>{\r\n        setValues(values => ({...values, email: '', password:'',confirmPassword:''}));\r\n    }\r\n    const comparePassword = () => {\r\n        if(values.password != values.confirmPassword){\r\n            setValues(values => ({...values, confirm: false, disabled:true}))\r\n        } else{\r\n            setValues(values => ({...values, confirm: true, disabled: false}));\r\n        }\r\n    }\r\n    if (isLogged) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {loading === 'loading' ? <Box sx={{\r\n                position: 'absolute',\r\n                width: '100%',\r\n                height: '100%',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center'\r\n            }}>\r\n                <CircularProgress/>\r\n            </Box> : <div className={style.register}>\r\n                <div className={style.description}>It-incubator</div>\r\n                <h1>Sign Up</h1>\r\n\r\n                <FormControl sx={{m: 1, width: '80%'}} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">Email</InputLabel>\r\n                    <Input\r\n                        value={values.email}\r\n                        onChange={handleChange('email')}\r\n                    />\r\n                </FormControl>\r\n                <FormControl sx={{m: 1, width: '80%'}} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">Password</InputLabel>\r\n                    <Input\r\n                        id=\"standard-adornment-password\"\r\n                        type={values.showPassword ? 'text' : 'password'}\r\n                        value={values.password}\r\n                        onChange={handleChange('password')}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                >\r\n                                    {values.showPassword ? <VisibilityOff/> : <Visibility/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n                <FormControl sx={{m: 1, width: '80%'}} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-password\">Confirm password</InputLabel>\r\n                    <Input\r\n                        onBlur={comparePassword}\r\n                        type={values.showConfirmPassword ? 'text' : 'password'}\r\n                        value={values.confirmPassword}\r\n                        onChange={handleChange('confirmPassword')}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowConfirmPassword}\r\n                                    onMouseDown={handleMouseDownConfirmPassword}\r\n                                >\r\n                                    {values.showConfirmPassword ? <VisibilityOff/> : <Visibility/>}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                    />\r\n                </FormControl>\r\n\r\n                <div className={style.buttons}>\r\n                    {error && <div className={style.error}>{error}</div>}\r\n                    {!values.confirm && <div className={style.error}>The passwords don`t match</div>}\r\n                    <Button onClick={resetData} variant=\"outlined\" size=\"medium\">Cancel</Button>\r\n                    <Button disabled={values.disabled} onClick={sendData} variant=\"contained\" size=\"medium\">Register</Button>\r\n                </div>\r\n\r\n            </div>\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport SuperButton from \"../../common/Button/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {logoutTC} from \"../../../../BLL/login-reducer\";\r\nimport {AppRootStateType} from \"../../../../BLL/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../../routes/Routes\";\r\n\r\n\r\nexport const Profile = () => {\r\n    const isLogin = useSelector<AppRootStateType>(state => state.login.isLogin)\r\n    const dispatch= useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if(!isLogin){\r\n       return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                Profile\r\n                <div>\r\n                    <img src=\"\" alt=\"avatar\"/>\r\n                </div>\r\n                <div>\r\n                    Name:\r\n                </div>\r\n                <div>\r\n                    <SuperButton\r\n                        children={'Logout'}\r\n                        onClick={logoutHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const PasswordRecovery = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                Password Recovery\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                New Password\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport SuperButton from \"../../common/Button/SuperButton\";\r\nimport SuperInputText from \"../../common/Input/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/Checkbox/SuperCheckbox\";\r\n\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                Test\r\n                <SuperButton/>\r\n                <SuperInputText/>\r\n                <SuperCheckbox/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Error404 = ()=> {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport {Login} from '../components/pages/Login/Login';\r\nimport {SignUp} from '../components/pages/SignUp/SignUp';\r\nimport {Profile} from '../components/pages/Profile/Profile';\r\nimport {PasswordRecovery} from '../components/pages/PasswordRecovery/PasswordRecovery';\r\nimport {NewPassword} from '../components/pages/NewPassword/NewPassword';\r\nimport {Test} from '../components/pages/Test/Test';\r\nimport {Error404} from '../components/pages/Error404/Error404';\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    PASSWORD_RECOVERY:'/password-recovery',\r\n    NEW_PASSWORD:'/new-password,',\r\n    TEST_PAGE:'/test'\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <SignUp/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n                <Route path={PATH.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword/>}/>\r\n                <Route path={PATH.TEST_PAGE} render={() => <Test/>}/>\r\n\r\n                <Route render={() => <Error404/>}/>\r\n\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../routes/Routes';\r\nimport s from './Navbar.module.css'\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.navbar}>\r\n            <div>\r\n                <NavLink to={PATH.LOGIN}>LOGIN</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.PROFILE}>PROFILE</NavLink>\r\n            </div>\r\n            <div>\r\n\r\n\r\n                <NavLink to={PATH.REGISTRATION}>REGISTRATION</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={PATH.TEST_PAGE}>TEST_PAGE</NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './UI/components/Navbar';\r\nimport {Routes} from './UI/routes/Routes';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <Navbar/>\r\n            <Routes/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","\r\nconst initState = {\r\n    newPassword: ''\r\n}\r\n\r\n\r\nexport const NewPasswordReducer = (state = initState, action: NewPasswordACType)=> {\r\n    switch (action.type) {\r\n        case 'SHOW-NEW-PASSWORD': {\r\n            return {\r\n                ...state,\r\n                newPassword: action.newPassword\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n    type NewPasswordACType = ReturnType<typeof NewPasswordAC>\r\n\r\n    export const NewPasswordAC = (newPassword: string) => (\r\n        {type: 'SHOW-NEW-PASSWORD', newPassword } as const )","\r\nconst initState = {\r\n    passwordRecovery: false\r\n}\r\n\r\nexport const PasswordRecoveryReducer = (state = initState, action: PasswordRecoverACType) => {\r\n    {\r\n        switch (action.type) {\r\n            case 'SHOW-PASSWORD-RECOVERY': {\r\n                return {\r\n                    ...state,\r\n                    passwordRecovery: action.passwordRecovery\r\n                }\r\n            }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n}\r\n\r\ntype PasswordRecoverACType = ReturnType<typeof passwordRecoverAC>\r\n\r\nexport const passwordRecoverAC = (passwordRecovery:boolean) => (\r\n    {type: 'SHOW-PASSWORD-RECOVERY', passwordRecovery } as const )","\r\nconst initState = {\r\n    title: ''\r\n}\r\n\r\nexport const ProfileReducer = (state = initState, action: ProfileACType)=> {\r\n    switch (action.type) {\r\n        case 'SHOW-PROFILE': {\r\n            return {\r\n                ...state,\r\n                newPassword: action.title\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\ntype ProfileACType = ReturnType<typeof profileAC>\r\n\r\nexport const profileAC = (title: string) => (\r\n    {type: 'SHOW-PROFILE', title } as const )","import { applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {LoginReducer} from './login-reducer';\r\nimport {NewPasswordReducer} from './new-password-reducer';\r\nimport {PasswordRecoveryReducer} from './password-recovery-reducer';\r\nimport {ProfileReducer} from './profile-reducer';\r\nimport { SignUpReducer} from './sign-up-reducer';\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    login: LoginReducer,\r\n    newPassword: NewPasswordReducer,\r\n    passwordRecovery: PasswordRecoveryReducer,\r\n    profile: ProfileReducer,\r\n    signUp: SignUpReducer,\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from './BLL/store';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"SignUp_register__2zInk\",\"description\":\"SignUp_description__3YFgm\",\"buttons\":\"SignUp_buttons__2FjZq\",\"error\":\"SignUp_error__1Kdli\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3JnC2\",\"errorInput\":\"SuperInputText_errorInput__2oGH5\",\"error\":\"SuperInputText_error__1ghRd\",\"span\":\"SuperInputText_span__27XX8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2h9LP\",\"spanClassName\":\"SuperCheckbox_spanClassName__1exBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__vGOr_\",\"red\":\"SuperButton_red__3BUew\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3HQtz\"};"],"sourceRoot":""}